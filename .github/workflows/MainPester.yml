name: MainPester
on:
  #push:
  #  branches: ["main"]
  #pull_request:
  #  branches: ["main"]
  workflow_dispatch:

jobs:
  test-pwsh:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: Run Pester tests (pwsh)
        run: |
          Write-host $PSVersionTable.PSVersion.ToString()
          Set-PSRepository psgallery -InstallationPolicy trusted
          Install-Module -Name Pester -RequiredVersion 5.0.4 -confirm:$false -Force
          Invoke-Pester .\Tests\Main
          if ($Error[0].Fullyqualifiederrorid -eq 'PesterAssertionFailed') {exit 1}
        shell: pwsh

  test-powershell:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Pester tests (PowerShell)
        run: |
          Write-host $PSVersionTable.PSVersion.ToString()
          Set-PSRepository psgallery -InstallationPolicy trusted
          Install-Module -Name Pester -RequiredVersion 5.0.4 -Confirm:$false -Force
          Invoke-Pester .\Tests\Main
          if ($Error[0].Fullyqualifiederrorid -eq 'PesterAssertionFailed') {exit 1}
        shell: powershell
